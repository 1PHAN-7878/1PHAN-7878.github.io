<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/09/22/java/"/>
      <url>/2023/09/22/java/</url>
      
        <content type="html"><![CDATA[<h1 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1 基本语法"></a>1 基本语法</h1><h2 id="1-1-String"><a href="#1-1-String" class="headerlink" title="1.1 String"></a>1.1 String</h2><p>在Java中，<code>String</code> 类是用于表示字符串的类，它提供了丰富的方法和功能来操作字符串。字符串是一组字符的序列，而在Java中，字符串是不可变的，这意味着一旦创建了字符串，就不能更改其内容。</p><p>以下是一些常用的 <code>String</code> 类的用法和示例：</p><h3 id="1-创建字符串"><a href="#1-创建字符串" class="headerlink" title="1. 创建字符串"></a>1. 创建字符串</h3><p>可以通过直接赋值或使用构造函数创建字符串对象：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">"Hello, World!"</span>;  <span class="comment">// 使用直接赋值创建字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">"Hello, World!"</span>);  <span class="comment">// 使用构造函数创建字符串</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-获取字符串长度"><a href="#2-获取字符串长度" class="headerlink" title="2. 获取字符串长度"></a>2. 获取字符串长度</h3><p>可以使用 <code>length()</code> 方法获取字符串的长度：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">"Hello, World!"</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> str.length();  <span class="comment">// 获取字符串长度</span></span><br><span class="line">System.out.println(<span class="string">"Length of the string: "</span> + length);</span><br></pre></td></tr></tbody></table></figure><h3 id="3-拼接字符串"><a href="#3-拼接字符串" class="headerlink" title="3. 拼接字符串"></a>3. 拼接字符串</h3><p>可以使用 <code>+</code> 运算符或 <code>concat()</code> 方法将多个字符串拼接在一起：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">"Hello, "</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">"World!"</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> str1 + str2;  <span class="comment">// 使用 + 运算符拼接字符串</span></span><br><span class="line"><span class="comment">// 或者使用 concat() 方法</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> str1.concat(str2);</span><br><span class="line">System.out.println(<span class="string">"Concatenated string: "</span> + result);</span><br></pre></td></tr></tbody></table></figure><h3 id="4-字符串比较"><a href="#4-字符串比较" class="headerlink" title="4. 字符串比较"></a>4. 字符串比较</h3><p>可以使用 <code>equals()</code> 方法或 <code>compareTo()</code> 方法比较字符串：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">"hello"</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">"Hello"</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">isEqual</span> <span class="operator">=</span> str1.equals(str2);  <span class="comment">// 使用 equals() 比较字符串</span></span><br><span class="line"><span class="type">int</span> <span class="variable">comparison</span> <span class="operator">=</span> str1.compareTo(str2);  <span class="comment">// 使用 compareTo() 比较字符串</span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-提取子字符串"><a href="#5-提取子字符串" class="headerlink" title="5. 提取子字符串"></a>5. 提取子字符串</h3><p>可以使用 <code>substring()</code> 方法从字符串中提取子串：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">"Hello, World!"</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">subStr</span> <span class="operator">=</span> str.substring(<span class="number">7</span>);  <span class="comment">// 提取从位置7开始的子串</span></span><br><span class="line">System.out.println(<span class="string">"Substring: "</span> + subStr);</span><br></pre></td></tr></tbody></table></figure><h3 id="6-查找子字符串"><a href="#6-查找子字符串" class="headerlink" title="6. 查找子字符串"></a>6. 查找子字符串</h3><p>可以使用 <code>indexOf()</code> 方法或 <code>contains()</code> 方法查找子字符串是否存在：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">"Hello, World!"</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> str.indexOf(<span class="string">"World"</span>);  <span class="comment">// 查找子串的位置</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">contains</span> <span class="operator">=</span> str.contains(<span class="string">"Hello"</span>);  <span class="comment">// 检查是否包含子串</span></span><br></pre></td></tr></tbody></table></figure><h2 id="1-2-StringBuilder"><a href="#1-2-StringBuilder" class="headerlink" title="1.2 StringBuilder"></a>1.2 StringBuilder</h2><p>在Java中，<code>StringBuilder</code> 是一个用于处理可变字符串的类。与 <code>String</code> 不同，<code>StringBuilder</code> 允许你在不创建新对象的情况下修改字符串的内容，这对于频繁的字符串拼接操作非常高效。以下是一些使用 <code>StringBuilder</code> 的常见方法和示例：</p><h3 id="1-创建-StringBuilder-对象"><a href="#1-创建-StringBuilder-对象" class="headerlink" title="1. 创建 StringBuilder 对象"></a>1. 创建 <code>StringBuilder</code> 对象</h3><p>可以使用构造函数创建一个 <code>StringBuilder</code> 对象：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(); <span class="comment">// 创建一个空的 StringBuilder 对象</span></span><br></pre></td></tr></tbody></table></figure><p>你也可以在构造函数中传入一个初始字符串：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">"Hello"</span>); <span class="comment">// 创建包含初始字符串 "Hello" 的 StringBuilder 对象</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-追加字符串"><a href="#2-追加字符串" class="headerlink" title="2. 追加字符串"></a>2. 追加字符串</h3><p>可以使用 <code>append()</code> 方法来追加字符串到 <code>StringBuilder</code> 对象：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">"Hello"</span>);</span><br><span class="line">sb.append(<span class="string">", World!"</span>); <span class="comment">// 追加字符串</span></span><br></pre></td></tr></tbody></table></figure><h3 id="3-插入字符串"><a href="#3-插入字符串" class="headerlink" title="3. 插入字符串"></a>3. 插入字符串</h3><p>使用 <code>insert()</code> 方法可以在指定位置插入字符串：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">"Hello"</span>);</span><br><span class="line">sb.insert(<span class="number">5</span>, <span class="string">" Java"</span>); <span class="comment">// 在位置5插入字符串</span></span><br></pre></td></tr></tbody></table></figure><h3 id="4-删除字符"><a href="#4-删除字符" class="headerlink" title="4. 删除字符"></a>4. 删除字符</h3><p>使用 <code>delete()</code> 方法可以删除指定范围内的字符：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line">sb.delete(<span class="number">7</span>, <span class="number">13</span>); <span class="comment">// 删除位置7到13之间的字符</span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-替换字符"><a href="#5-替换字符" class="headerlink" title="5. 替换字符"></a>5. 替换字符</h3><p>使用 <code>replace()</code> 方法可以替换指定范围内的字符：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line">sb.replace(<span class="number">7</span>, <span class="number">13</span>, <span class="string">"Java"</span>); <span class="comment">// 将位置7到13之间的字符替换为 "Java"</span></span><br></pre></td></tr></tbody></table></figure><h3 id="6-获取字符串"><a href="#6-获取字符串" class="headerlink" title="6. 获取字符串"></a>6. 获取字符串</h3><p>使用 <code>toString()</code> 方法可以将 <code>StringBuilder</code> 对象转换为 <code>String</code>：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> sb.toString(); <span class="comment">// 转换为 String</span></span><br></pre></td></tr></tbody></table></figure><h3 id="7-获取长度"><a href="#7-获取长度" class="headerlink" title="7. 获取长度"></a>7. 获取长度</h3><p>可以使用 <code>length()</code> 方法获取 <code>StringBuilder</code> 中字符的数量：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> sb.length(); <span class="comment">// 获取长度</span></span><br></pre></td></tr></tbody></table></figure><p><code>StringBuilder</code> 的方法允许你执行许多字符串操作，而不需要创建多个不必要的字符串对象，这在性能上通常更高效。因此，当需要频繁修改字符串时，建议使用 <code>StringBuilder</code>。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/18/guai/"/>
      <url>/2023/09/18/guai/</url>
      
        <content type="html"><![CDATA[<h1 id="发现了一只乖乖猪"><a href="#发现了一只乖乖猪" class="headerlink" title="发现了一只乖乖猪~"></a>发现了一只乖乖猪~</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/18/text/"/>
      <url>/2023/09/18/text/</url>
      
        <content type="html"><![CDATA[<h1 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h1><h2 id="小标题"><a href="#小标题" class="headerlink" title="小标题"></a>小标题</h2><p>正文</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;isotream&gt;</span></span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/18/hello-world/"/>
      <url>/2023/09/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
